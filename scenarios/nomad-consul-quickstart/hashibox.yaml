images:
  # Try to use a local image first.
  - location: ~/artifacts/qemu/c-1.18-n-1.7/c-1.18-n-1.7.qcow2


# disable port-mapping, mounts, containerd etc
plain: true

provision:
  - mode: system # install Consul and Nomad Licenses if any
    script: |
      #!/bin/bash

      if [[ -n $CONSUL_LICENSE ]]; then
        echo "CONSUL_LICENSE=$CONSUL_LICENSE" > /etc/consul.d/consul.env
      fi

      if [[ -n $NOMAD_LICENSE ]]; then
        echo "NOMAD_LICENSE=$NOMAD_LICENSE" > /etc/nomad.d/nomad.env
      fi

  - mode:  system # Configure Consul common settings
    script: |
      #!/bin/bash

      # common config for Server and Client
      cat <<-EOF > /etc/consul.d/consul.hcl
        data_dir  = "/opt/consul/data"
        log_level  = "INFO"
        bind_addr = {{ "\"{{ GetInterfaceIP \\\"lima0\\\"}}\"" }}
        client_addr = "0.0.0.0"
        retry_join = ["lima-${SHIKARI_CLUSTER_NAME}-srv-01.local"]
        datacenter = "${SHIKARI_CLUSTER_NAME}"

        ui_config {
          enabled = true
        }
      EOF

  - mode: system # Configure Consul server settings
    script: |
      #!/bin/bash

      if [[ ${SHIKARI_VM_MODE} == "server" ]]; then
      cat <<-EOF > /etc/consul.d/server.hcl
        connect {
          enabled = true
        }

        server = true
        bootstrap_expect = $SHIKARI_SERVER_COUNT
      EOF
      fi

  - mode: system # Configure Consul client settings
    script: |
      #!/bin/bash

      if [[ ${SHIKARI_VM_MODE} == "client" ]]; then
      cat <<-EOF > /etc/consul.d/client.hcl

        recursors = ["1.1.1.1", "8.8.8.8"]

        ports {
          grpc = 8502
        }
      EOF
      fi

  - mode: system # Configure Nomad common settings
    script: |
      #!/bin/bash
      cat <<-EOF > /etc/nomad.d/nomad.hcl
        data_dir  = "/opt/nomad/data"
        bind_addr = "0.0.0.0"
        datacenter = "${SHIKARI_CLUSTER_NAME}"
        log_level = "DEBUG"

        advertise {
          http = {{ "\"{{ GetInterfaceIP \\\"lima0\\\"}}\"" }}
          rpc = {{ "\"{{ GetInterfaceIP \\\"lima0\\\"}}\"" }}
          serf = {{ "\"{{ GetInterfaceIP \\\"lima0\\\"}}\"" }}
        }
      EOF

  - mode: system # configure Nomad server settings
    script: |
      #!/bin/bash

      if [[ ${SHIKARI_VM_MODE} == "server" ]]; then
      cat <<-EOF > /etc/nomad.d/server.hcl
        server {
        #license_path = "/etc/nomad.d/license.hclic"
        enabled = true
        bootstrap_expect = $SHIKARI_SERVER_COUNT

          server_join {
            retry_join = ["lima-${SHIKARI_CLUSTER_NAME}-srv-01.local"]
          }
        }
      EOF
      fi

  - mode: system # configure Nomad client settings
    script: |
      #!/bin/bash

      if [[ ${SHIKARI_VM_MODE} == "client" ]]; then
      cat <<-EOF > /etc/nomad.d/client.hcl
        client {
          enabled = true
          servers = ["lima-${SHIKARI_CLUSTER_NAME}-srv-01.local"]

          network_interface = "lima0"
        }
      EOF
      fi

  - mode: system # configure Nomad exec2 driver
    script: |
      #!/bin/bash

      # Get Nomad version
      nomad_version=$(nomad --version | sed -n 's/^Nomad v\([0-9]\+\.[0-9]\+\).*/\1/p')
      nomad_required_version="1.8"

      if awk 'BEGIN { exit !('"${nomad_version}"' >= '"${nomad_required_version}"') }' && [[ ${SHIKARI_VM_MODE} == "client" ]]; then
      # Check if Nomad version is 1.8 or higher
      cat <<-EOF > /etc/nomad.d/exec2.hcl
      plugin "nomad-driver-exec2" {
        config {
          unveil_defaults = true
          unveil_paths    = []
          unveil_by_task  = true
        }
      }
      EOF

        package_name="nomad-driver-exec2"
        existing_package_location="/usr/bin"
        nomad_pluginsdir=/opt/nomad/data/plugins

        # Check if the directory exists
        if [ ! -d "$nomad_pluginsdir" ]; then
          mkdir -p "$nomad_pluginsdir"
        fi

        # Check if the plugin exists.
        if rpm -q "$package_name" >/dev/null 2>&1; then
          cp "$existing_package_location/$package_name" "$nomad_pluginsdir"
        fi
      fi

  - mode:
    script: |
      systemctl enable --now docker
      systemctl enable --now nomad consul
  - mode: user
    script: |
      #!/bin/sh
      nomad -autocomplete-install
      consul -autocomplete-install
networks:
  - lima: shared
vmType: qemu
env:
  SHIKARI_SCENARIO_NAME: "nomad-consul-quickstart"
