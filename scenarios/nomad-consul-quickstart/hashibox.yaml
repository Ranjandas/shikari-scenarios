images:
  # Try to use a local image first.
  - location: ~/artifacts/qemu/c-1.18-n-1.7/c-1.18-n-1.7.qcow2

mounts: []
containerd:
  system: false
  user: false
provision:
  - mode: system # configure Consul
    script: |
      #!/bin/bash

      function setConfig {
          local mode=$1
          local cluster=$2

          # Set the config files accordingly 
          if [[ $mode == "server" ]]; then
      cat <<-EOF > /etc/consul.d/consul.hcl
        data_dir  = "/opt/consul/data"
        log_level  = "INFO"
        bind_addr = {{ "\"{{ GetInterfaceIP \\\"lima0\\\"}}\"" }}
        client_addr = "0.0.0.0"
        retry_join = ["lima-$cluster-srv-01.local"]
        datacenter = "$cluster"

        ui_config {
          enabled = true
        }

        connect {
          enabled = true
        }

        server = true
        bootstrap_expect = $BOOTSTRAP_EXPECT
      EOF

          elif [[ $mode == "client" ]]; then
      cat <<-EOF > /etc/consul.d/consul.hcl
        data_dir  = "/opt/consul/data"
        log_level  = "INFO"
        bind_addr = {{ "\"{{ GetInterfaceIP \\\"lima0\\\"}}\"" }}
        client_addr = "0.0.0.0"
        retry_join = ["lima-$cluster-srv-01.local"]
        datacenter = "$cluster"

        connect {
          enabled = true
        }
        server = false
      EOF
          else
            echo "Invalid mode for setConfig"
          fi
        }

          # Check if the environment variable 'MODE' is set
          if [[ -n $MODE ]]; then
              echo "MODE is set to: $MODE"
          else
              echo "MODE is not set."
          fi

          # Check if the environment variable 'CLUSTER' is set
          if [[ -n $CLUSTER ]]; then
              echo "CLUSTER is set to: $CLUSTER"
          else
              echo "CLUSTER is not set."
          fi

          if [[ -n $CONSUL_LICENSE ]]; then
            echo "CONSUL_LICENSE=$CONSUL_LICENSE" > /etc/consul.d/consul.env
          fi

          setConfig $MODE $CLUSTER

  - mode: system # configure Nomad
    script: |
      #!/bin/bash    
      function setConfig {
          local mode=$1
          local cluster=$2

          # Set the config files accordingly 
          if [[ $mode == "server" ]]; then
      cat <<-EOF > /etc/nomad.d/nomad.hcl
          data_dir  = "/opt/nomad/data"
          bind_addr = {{ "\"{{ GetInterfaceIP \\\"lima0\\\"}}\"" }}

          server {
          #license_path = "/etc/nomad.d/license.hclic"
          enabled = true
          bootstrap_expect = $BOOTSTRAP_EXPECT

          server_join {
              retry_join = ["lima-$cluster-srv-01.local"]
          }
          }
          datacenter = "$cluster"

          client {
          enabled = true
          servers = ["lima-$cluster-srv-01.local"]
          }
      EOF

          elif [[ $mode == "client" ]]; then
      cat <<-EOF > /etc/nomad.d/nomad.hcl
          data_dir  = "/opt/nomad/data"
          bind_addr = {{ "\"{{ GetInterfaceIP \\\"lima0\\\"}}\"" }}
          datacenter = "$cluster"

          client {
          enabled = true
          servers = ["lima-$cluster-srv-01.local"]
          }
      EOF
          else
              echo "Invalid mode for setConfig"
          fi
      }


          # Check if the environment variable 'MODE' is set
          if [[ -n $MODE ]]; then
              echo "MODE is set to: $MODE"
          else
              echo "MODE is not set."
          fi

          # Check if the environment variable 'CLUSTER' is set
          if [[ -n $CLUSTER ]]; then
              echo "CLUSTER is set to: $CLUSTER"
          else
              echo "CLUSTER is not set."
          fi

          if [[ -n $NOMAD_LICENSE ]]; then
            echo "NOMAD_LICENSE=$NOMAD_LICENSE" > /etc/nomad.d/nomad.env
          fi

          setConfig $MODE $CLUSTER
  - mode:
    script: |
      systemctl enable --now docker
      systemctl enable --now nomad consul
  - mode: user
    script: |
      #!/bin/sh
      nomad -autocomplete-install
      consul -autocomplete-install
networks:
  - lima: shared
vmType: qemu

